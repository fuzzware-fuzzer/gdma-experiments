interrupt_triggers:
  trigger:
    every_nth_tick: 0x3e8
    fuzz_mode: round_robin
memory_map:
  irq_ret:
    base_addr: 0xfffff000
    permissions: --x
    size: 0x1000
  mmio:
    base_addr: 0x40000000
    permissions: rw-
    size: 0x20000000
  nvic:
    base_addr: 0xe0000000
    permissions: rw-
    size: 0x10000000
  ram:
    base_addr: 0x20000000
    permissions: rw-
    size: 0x100000
  text:
    base_addr: 0x8000000
    file: F103_ChibiOS_SPI.bin
    is_entry: true
    ivt_offset: 0x0
    permissions: r-x
    size: 0x1260c
symbols:
  0x0:
  - build/obj/vectors.o
  - build/obj/crt0_v7m.o
  - build/obj/chcoreasm_v7m.o
  - __flash1_end__
  - __flash6_free__
  - __flash6_start__
  - __ram4_start__
  - __flash7_free__
  - __ram5_clear__
  - __ram1_free__
  - __ram6_start__
  - __ram5_end__
  - __ram5_noinit__
  - __flash1_free__
  - __ram5_size__
  - __flash7_size__
  - __flash4_free__
  - __ram1_size__
  - __flash3_free__
  - __ram1_clear__
  - __flash2_start__
  - __flash4_start__
  - __ram7_free__
  - __ram4_size__
  - __ram1_end__
  - __ram4_end__
  - __flash5_end__
  - __flash2_free__
  - __flash2_end__
  - __flash4_size__
  - __flash5_free__
  - __flash5_start__
  - __ram4_clear__
  - __ram5_free__
  - __flash6_end__
  - __ram3_clear__
  - __ram6_end__
  - __ram6_init__
  - __ram7_init__
  - __ram6_free__
  - __ram2_noinit__
  - __flash3_start__
  - __ram6_noinit__
  - __ram4_init__
  - __ram7_clear__
  - __ram7_size__
  - __ram4_noinit__
  - __ram7_start__
  - __ram6_clear__
  - __flash3_end__
  - __ram3_size__
  - __ram2_clear__
  - __ram3_end__
  - __ram2_size__
  - __ram1_start__
  - __flash3_size__
  - __ram6_size__
  - __flash5_size__
  - __ram3_free__
  - __flash3_init__
  - __flash6_init__
  - __ram1_noinit__
  - __flash2_size__
  - __flash4_end__
  - __ram2_init__
  - __ram2_end__
  - __ram3_noinit__
  - __flash7_start__
  - __ram2_start__
  - __ram7_end__
  - __flash5_init__
  - __flash1_start__
  - __ram5_init__
  - __flash7_init__
  - __flash1_size__
  - __ram3_init__
  - __ram1_init__
  - __ram5_start__
  - __flash6_size__
  - __ram2_free__
  - __ram4_free__
  - __ram7_noinit__
  - __flash2_init__
  - __flash4_init__
  - __ram3_start__
  - __flash1_init__
  - __flash7_end__
  0x400:
  - __main_stack_size__
  - __process_stack_size__
  0x4e10: crt1.c.17960576
  0x5000: __ram0_size__
  0x516d: hal.c.8c4afacb
  0x6236: hal_st.c.0dbf138e
  0x752c: hal_buffers.c.cce74b5c
  0x963e: hal_pal.c.eeabc892
  0xa8c5: hal_spi.c.734d7907
  0xbe70: nvic.c.8224e873
  0xd2a5: stm32_isr.c.618356a7
  0xe617: hal_lld.c.87b1cd5b
  0xf858: stm32_dma.c.fd9c2509
  0x10d0f: hal_pal_lld.c.24724fcb
  0x1216d: hal_spi_lld.c.fa01d1a4
  0x135f2: hal_st_lld.c.5d8f6fc4
  0x14974: board.c.1087955b
  0x15a44: chsys.c.d36f0733
  0x17235: chdebug.c.e108299d
  0x17eaa: chtrace.c.76b7ae42
  0x18f38: chvt.c.04720a00
  0x19e16: chschd.c.6317f1ac
  0x1ad71: chthreads.c.cc0ac780
  0x1c37a: chtm.c.9de839e9
  0x1d1fd: chregistry.c.9cc16bb7
  0x1e7d8: chmtx.c.40187049
  0x1f72e: chdynamic.c.49438810
  0x20000: __flash0_size__
  0x205db: chmemcore.c.181a494f
  0x21307: chmemheaps.c.81ca1f6a
  0x221d1: chmempools.c.4be765c2
  0x23150: chfactory.c.577e0ffa
  0x2501f: chcore_v7m.c.868d90cd
  0x25ee8: main.c.c4bf80bc
  0x8000000:
  - _vectors
  - __flash0_start__
  0x8000160:
  - __fini_array_end
  - __text_base
  - __fini_array_start
  - __init_array_end
  - __init_array_start
  0x8000161: _crt0_entry
  0x8000194: msloop
  0x80001a2: psloop
  0x80001b2: dloop
  0x80001c6: bloop
  0x80001dc: initloop
  0x80001e8: endinitloop
  0x80001f0: finiloop
  0x80001fc: endfiniloop
  0x8000239: Reset_Handler
  0x800023b:
  - VectorE8
  - VectorAC
  - DebugMon_Handler
  - Vector11C
  - HardFault_Handler
  - Vector8C
  - SysTick_Handler
  - VectorDC
  - PendSV_Handler
  - NMI_Handler
  - Vector110
  - Vector120
  - VectorC8
  - Vector94
  - VectorA8
  - VectorB4
  - UsageFault_Handler
  - VectorEC
  - Vector40
  - VectorF8
  - Vector108
  - VectorBC
  - Vector150
  - Vector124
  - Vector148
  - Vector118
  - VectorCC
  - Vector54
  - Vector98
  - VectorD8
  - Vector138
  - Vector24
  - VectorD0
  - Vector140
  - VectorE4
  - VectorC0
  - Vector158
  - Vector130
  - Vector134
  - VectorF0
  - Vector12C
  - Vector13C
  - Vector100
  - VectorF4
  - MemManage_Handler
  - VectorA0
  - VectorC4
  - Vector90
  - Vector114
  - Vector1C
  - Vector48
  - VectorD4
  - Vector4C
  - Vector144
  - Vector15C
  - Vector88
  - Vector104
  - Vector10C
  - Vector14C
  - BusFault_Handler
  - Vector50
  - Vector154
  - Vector44
  - Vector28
  - VectorB8
  - VectorFC
  - Vector34
  - Vector128
  - VectorA4
  - Vector20
  0x800023e: .stay
  0x800023f: _unhandled_exception
  0x8000241: _port_switch
  0x8000251: _port_thread_start
  0x8000265: _port_switch_from_isr
  0x8000270: _port_exit_from_isr
  0x8000281: _pal_lld_setgroupmode.constprop.0
  0x80002e1: chTMStartMeasurementX.constprop.0
  0x80002f1: button_cb
  0x8000301: _port_irq_epilogue
  0x8000361: chTMStopMeasurementX
  0x80003b1: trace_next
  0x80003f1: _trace_switch.part.0
  0x8000411: _trace_isr_leave
  0x8000441: _trace_isr_enter
  0x8000471: chSysHalt
  0x80004a1: spi_lld_serve_tx_interrupt
  0x80004c1: chDbgCheckClassS
  0x80004e1: chDbgCheckClassI
  0x8000501: dmaStreamAllocI.constprop.0
  0x80005d1: chCoreAllocAlignedWithOffsetI
  0x8000621: chCoreAllocAlignedI
  0x8000631: chSchReadyI
  0x8000681: _dbg_check_leave_isr
  0x80006b1: _dbg_check_enter_isr
  0x80006e1: _dbg_check_unlock_from_isr
  0x8000711: _dbg_check_lock_from_isr
  0x8000741: wakeup
  0x80007a1: _idle_thread
  0x80007b1: spi_lld_serve_rx_interrupt
  0x8000881: dmaServeInterrupt
  0x80008c1: stSetAlarm
  0x80008e1: spi_lld_start.constprop.0
  0x80009b1: chSchWakeupS.constprop.0
  0x8000a31: chSchGoSleepS
  0x8000a91: SVC_Handler
  0x8000ab1:
  - chSchDoRescheduleAhead
  - chSchDoReschedule
  0x8000b41: _dbg_check_unlock
  0x8000b61: chSysUnlock.lto_priv.1
  0x8000b91: chSysUnlock.lto_priv.6
  0x8000bc1: _dbg_check_lock
  0x8000be1: spiSelect.constprop.0
  0x8000c41: spiUnselect.constprop.0
  0x8000ca1: spiExchange.constprop.0
  0x8000d61: chCoreAllocAlignedWithOffset
  0x8000db1: chMtxUnlock
  0x8000e81: chMtxLock
  0x8000fa1: spi_thread_1
  0x8001071: spi_thread_2
  0x8001141: chRegFindThreadByWorkingArea
  0x8001361: chThdCreateStatic.constprop.0
  0x8001411: main
  0x8001b11: chThdExit
  0x8001b71: __early_init
  0x8001bf1: VectorB0
  0x8001d11: Vector84
  0x8001d41: Vector80
  0x8001d71: Vector7C
  0x8001da1: Vector78
  0x8001dd1: Vector74
  0x8001e01: Vector70
  0x8001e31: Vector6C
  0x8001e61: VectorE0
  0x8001ef1: Vector9C
  0x8001f71: Vector68
  0x8001fc1: Vector64
  0x8002011: Vector60
  0x8002061: Vector5C
  0x80020b1: Vector58
  0x8002101: __init_ram_areas
  0x8002171: __default_exit
  0x8002181: __late_init
  0x8002191: __core_init
  0x8002194:
  - __text_end
  - __rodata_base__
  0x8002228: __func__.4292.lto_priv.0
  0x8002234: __func__.4292.lto_priv.1
  0x8002240: __func__.5513.lto_priv.0
  0x800224c: __func__.5513.lto_priv.1
  0x8002258: __func__.5513.lto_priv.2
  0x8002264: __func__.5513.lto_priv.3
  0x8002270: __func__.5513.lto_priv.4
  0x800227c: __func__.5513.lto_priv.5
  0x8002288: __func__.5599
  0x8002294: __func__.5915
  0x80022a0: __func__.6503
  0x80022ac: __func__.6506.lto_priv.0
  0x80022b8: __func__.6506.lto_priv.1
  0x80022c4: __func__.6510.lto_priv.0
  0x80022d8: __func__.6510.lto_priv.1
  0x80022f8: __func__.6525.lto_priv.0
  0x8002304: __func__.6525.lto_priv.1
  0x8002310: __func__.6528
  0x800231c: __func__.6529
  0x8002328: __func__.6534
  0x800233c: __func__.6539
  0x800234c: __func__.6546
  0x800235c: __func__.6561
  0x8002368: __func__.6600
  0x8002380: __func__.6606
  0x8002390: __func__.6906
  0x80023a0: __func__.7191
  0x80023ac: __func__.7192
  0x80023b8: __func__.7194
  0x80023c8: __func__.7197
  0x80023d4: __func__.7198
  0x80023e0: __func__.7200
  0x80023ec: __func__.7201
  0x80023f8: __func__.7202
  0x8002404: __func__.7204
  0x8002410: __func__.7206.lto_priv.0
  0x800241c: __func__.7206.lto_priv.1
  0x800242c: __func__.7207
  0x8002438: __func__.7208
  0x8002444: __func__.7210
  0x8002450: __func__.7212.lto_priv.0
  0x800245c: __func__.7212.lto_priv.1
  0x8002468: __func__.7216
  0x8002474: __func__.7217
  0x8002480: __func__.7220
  0x800248c: __func__.7221.lto_priv.0
  0x80024a4: __func__.7222
  0x80024b0: __func__.7224
  0x80024bc: __func__.7254
  0x80024c8: _stm32_dma_streams
  0x8002538: cfgtab.7201
  0x800254c: ch_debug
  0x8002564: hs_spicfg
  0x8002578: ls_spicfg
  0x800258c: ram_areas
  0x800260c:
  - __exidx_end
  - __ram3_init_text__
  - __rodata_end__
  - __exidx_start
  - __ram0_init_text__
  - __ram1_init_text__
  - __ram5_init_text__
  - __ram6_init_text__
  - __flash0_init__
  - __flash0_free__
  - __ram2_init_text__
  - __ram4_init_text__
  - __ram7_init_text__
  - _textdata_start
  0x8020000: __flash0_end__
  0x10000000: ICSR_PENDSVSET
  0x20000000:
  - __ram0_start__
  - __main_stack_base__
  0x20000400:
  - __process_stack_base__
  - __main_stack_end__
  - __main_thread_stack_base__
  0x20000800:
  - SPID1
  - __main_thread_stack_end__
  - _bss_start
  - _data_start
  - _data_end
  - __process_stack_end__
  0x20000830: SPID2
  0x20000860: _pal_events
  0x200008e0: auxData
  0x200008e4: ch
  0x2000116c: ch_factory
  0x200011b8: ch_idle_thread_wa
  0x20001290: ch_memcore
  0x20001298: default_heap
  0x200012b4: dma
  0x200012f4: i
  0x200012f8: rxbuf
  0x200014f8: spi_thread_1_wa
  0x200016c0: spi_thread_2_wa
  0x20001888: txbuf
  0x20001a88:
  - __ram0_init__
  - __ram0_free__
  - __heap_base__
  - _bss_end
  - __ram0_clear__
  - __ram0_noinit__
  0x20005000:
  - __heap_end__
  - __ram0_end__
  0xe000ed04: SCB_ICSR
